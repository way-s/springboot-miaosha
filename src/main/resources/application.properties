server.port=8000

###druid
spring.datasource.name=datasource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/book?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=123456

###mybatis
mybatis.type-aliases-package=cn.huanhu.entity
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
mybatis.mapperLocations =classpath:/mapper/*Dao.xml

###redis
#redis服务器地址
spring.redis.host=127.0.0.1
#redis服务器连接端口
spring.redis.port=6379
#redis连接超时时间（毫秒） 1s=1000ms
spring.redis.timeout=10
#redis服务器连接密码 （默认为空）
spring.redis.password=123456
#redis数据库索引 默认0
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=10
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=10


###encoding
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
###templates
#指定模板所在的目录
spring.thymeleaf.prefix=classpath:/templates/
#检查模板路径是否存在
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5
#是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能。
spring.thymeleaf.cache=false

###logger
logging.file.path=D:\\IDEA\\project\\miaosha

###static spring对静态文件的处理 如果页面没有变化，只需要从浏览器取数据，不需要再到服务端请求数据
#启用静态资源 默认启用
spring.resources.add-mappings=true
#客户端缓存时间 秒
spring.resources.cache.period=3600
#在资源链中启用缓存
spring.resources.chain.cache=true
#是否启用Spring资源处理链。默认情况下，除非至少启用了一个策略，否则禁用。
spring.resources.chain.enabled=true
#是否启用已压缩资源（gzip、brotli）的解析
spring.resources.chain.compressed=true
#是否启用HTML5应用程序缓存清单重写
spring.resources.chain.html-application-cache=true
#文件位置
spring.resources.static-locations=classpath:/static/

#配置rabbitmq的安装地址、端口以及账户信息
#注意port 15672是管理端的端口
spring.application.name=spirng-boot-rabbitmq-sender
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#连接到代理时要使用的虚拟主机
spring.rabbitmq.virtual-host=v01
#最低消费人数
spring.rabbitmq.listener.simple.concurrency= 10
#最大消费人数
spring.rabbitmq.listener.simple.max-concurrency= 10
#单个请求中要处理的邮件数。它应该大于或等于事务大小（如果使用）
spring.rabbitmq.listener.simple.prefetch= 1
#启动时自动启动容器
spring.rabbitmq.listener.simple.auto-startup=true
#是否重新排队传递失败；默认为true
spring.rabbitmq.listener.simple.default-requeue-rejected=true
#设置为true可在“RabbitTemplate”中启用重试
spring.rabbitmq.template.retry.enabled=true
#第一次和第二次尝试发布消息之间的间隔
spring.rabbitmq.template.retry.initial-interval=1000
#发布邮件的最大尝试次数
spring.rabbitmq.template.retry.max-attempts=3
#发布邮件的最大尝试间隔
spring.rabbitmq.template.retry.max-interval=10000
#应用于上一个发布重试间隔的乘数
spring.rabbitmq.template.retry.multiplier=1.0


